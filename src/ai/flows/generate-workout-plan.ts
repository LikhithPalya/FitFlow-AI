// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates a personalized workout plan based on user input.
 *
 * - generateWorkoutPlan - A function that generates a workout plan.
 * - GenerateWorkoutPlanInput - The input type for the generateWorkoutPlan function.
 * - GenerateWorkoutPlanOutput - The return type for the generateWorkoutPlan function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateWorkoutPlanInputSchema = z.object({
  age: z.number().describe('The age of the user.'),
  weight: z.number().describe('The weight of the user in kilograms.'),
  fitnessGoals: z.string().describe('The fitness goals of the user, e.g., weight loss, muscle gain, general fitness.'),
  availableEquipment: z.string().describe('The equipment available to the user, e.g., dumbbells, resistance bands, bodyweight only.'),
});
export type GenerateWorkoutPlanInput = z.infer<typeof GenerateWorkoutPlanInputSchema>;

const GenerateWorkoutPlanOutputSchema = z.object({
  workoutPlan: z.string().describe('The generated workout plan.'),
});
export type GenerateWorkoutPlanOutput = z.infer<typeof GenerateWorkoutPlanOutputSchema>;

export async function generateWorkoutPlan(input: GenerateWorkoutPlanInput): Promise<GenerateWorkoutPlanOutput> {
  return generateWorkoutPlanFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateWorkoutPlanPrompt',
  input: {
    schema: z.object({
      age: z.number().describe('The age of the user.'),
      weight: z.number().describe('The weight of the user in kilograms.'),
      fitnessGoals: z.string().describe('The fitness goals of the user, e.g., weight loss, muscle gain, general fitness.'),
      availableEquipment: z.string().describe('The equipment available to the user, e.g., dumbbells, resistance bands, bodyweight only.'),
    }),
  },
  output: {
    schema: z.object({
      workoutPlan: z.string().describe('The generated workout plan.'),
    }),
  },
  prompt: `You are a personal trainer. Generate a personalized workout plan for a user based on their age, weight, fitness goals, and available equipment.

  Age: {{{age}}}
  Weight: {{{weight}}} kg
  Fitness Goals: {{{fitnessGoals}}}
  Available Equipment: {{{availableEquipment}}}

  Workout Plan:`,
});

const generateWorkoutPlanFlow = ai.defineFlow<
  typeof GenerateWorkoutPlanInputSchema,
  typeof GenerateWorkoutPlanOutputSchema
>({
  name: 'generateWorkoutPlanFlow',
  inputSchema: GenerateWorkoutPlanInputSchema,
  outputSchema: GenerateWorkoutPlanOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});
